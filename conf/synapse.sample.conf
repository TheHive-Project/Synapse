####### Core Configuration #######
api:
  #Enable Flask debug mode
  debug_mode: false
  #The IP address to listen on. 0.0.0.0 means listen to everything
  host: 0.0.0.0
  #The port to listen on
  port: 5000
  #When set to true, handle every request with a seperate thread
  threaded: true
  #The log level. Valid values are: TRACE, DEBUG, INFO, WARNING, ERROR
  log_level: INFO
  #When Synapse is dockerized, logs should be sent to STDOUT. Set to true then
  dockerized: false

####### Automation Configuration #######
Automation:
  #Enable the automation functionality in general
  enabled: false
  #When you have multiple customers, you can enable this and use the customers.conf file to define specific configuration for customers
  enable_customer_list: false
  #If present, defines the location of the automation configuration yaml files
  automation_config_dir: /path/to/automation_config
  #Define the field in the description where the Start Time (time of alert) is registered
  event_start_time: Start Time
  #event start time related to your environment. Elastic: "%Y-%m-%dT%H:%M:%S.%fZ" QRadar: "%Y-%m-%d %H:%M:%S"
  event_start_time_format: "%Y-%m-%d %H:%M:%S"
  #When using the customer list, you can define internal and debug contact, so that the customer based sender is replaced before sending the notification
  internal_contact: <customer_id>
  debug_contact: <customer_id>
  #The regexes that are used to find tags within The Hive that are used for automation purposes
  automation_regexes: 
    - 'uc-\w+-\d{3}\w{0,2}'
  #Logs the received webhooks in a different file. Can be useful for developping, troubleshooting and/or auditing
  log_webhooks: false
  #URL to The Hive for use in generating urls
  hive_url: https://www.hiveurl.com
  #Default tlp that will be assigned to all observables
  default_observable_tlp: 2
  #TLP List to configure ranges and regexes for observables that require a non standard TLP. Currently s
  # tlp_modifiers:
  #   red:
  #     ip:
  #       - 192.168.1.0/24
  #     domain:
  #       - '\.example(domain)\.'
  #     fqdn:
  #       - '\.example(domain)?\.'
  #     url:
  #       - '\.example(domain)?\.'

####### Module Configuration #######
TheHive:
  #Url to contact The Hive
  url: http://127.0.0.1:9000
  #The user from The Hive created for Synapse
  user: synapse
  #The corresponding API key
  api_key: <key>
  #Mail configuration required for creating MailTasks
  mail:
    enabled: true
    header: Dear Customer,
    footer: Kind regards,
    sender_name: Notifications

Cortex:
   : false
  #Url to contact Cortex
  url: http://127.0.0.1:9002
  #The user from The Hive created for Synapse
  user: synapse
  #The corresponding API key
  api_key: <api_key>
  #Mail configuration required for creating MailTasks
  mail:
    enabled: true
    responder_id: <responder_id>
    header: Dear Customer,
    footer: Kind regards,
    sender_name: Notifications

EWS:
  #Enable/disable the integration part of the module
  enabled: false
  #Endpoint used in the integration url
  synapse_endpoint: ews2th
  #ip or domain to EWS server
  server: ews.stargazer.org
  #According to exchangelib doc:
  #"username is usually in WINDOMAIN\username format
  #some servers also accept usernames in PrimarySMTPAddress
  #('myusername@example.com') format (Office365 requires it)
  username: stargazer.org\ap0054
  #Password
  password: P@55w0rD
  #Authentication type
  auth_type: NTLM
  #E-mail adress for the account
  smtp_address: cert@stargazer.org
  #Mail box folder where the E-mails are stored after coming in
  folder_name: TheHive

Slack:
  #Webhook URL created for the Slack channel
  url: <url>

Teams:
  #Webhook URL created for the Teams channel
  url: <url>

QRadar:
  #Enable/disable the integration part of the module
  enabled: false
  #Enable/disable the automation part of the module
  automation_enabled: false
  #Endpoint used in the integration url
  synapse_endpoint: qradar
  #ip or domain to QRadar
  server: qradar.stargazer.org
  #Authentication token of the service account for Synapse
  auth_token: d6e-8f-4e-85-55738fd
  #Enable/disable certificate verification
  cert_verification: true
  #Optional parameter to provide a custom CA file
  cert_filepath: /home/dc/qradar.crt
  #Optional Proxy configuration
  http_proxy: <url>
  https_proxy: <url>
  #Api version of QRadar
  api_version: 9.0
  #Api request timeout
  api_timeout: 300
  #Enable/disable the usage of a local redis cache. If enabled, redis needs to be available on the default port. It will cache the values of QRadar identifiers for IP addresses to reduce the query time
  api_redis_cache: false
  #A case template to assign on alerts created for an offense
  case_template: QRadar Offense
  #Custom fields that can retain the mentioned values
  offense_type_field: offenseType
  offense_source_field: offenseSource
  offense_id_field: offenseID
  #The time used when calling the python file to sync offenses instead of the API
  offense_time_range: all
  #Provide a list of regexes to exclude any offenses that should not end up in The Hive as an alert
  #offense_exclusion_regexes:
  #  - '^Debug:'
  #Enable/disable the extraction of MITRE id's
  extract_mitre_ids: true
  #Enable/disable the automation identifiers (such as Rule Id)
  extract_automation_identifiers: true
  #Fields to parse automation identifiers from. Which will be turned into tags
  automation_fields: 
    - rules
  #The regex used for the parsing
  tag_regexes: 
    - 'uc-\w+-\d{3}\w{0,2}'
  # In case there you have a kb where the rule name can be appended to the url like so:
  # https://kb.url/use_cases/<uc_kb_name>
  kb_url: <url>
  #Regexes to parse out the use case names required during URL generation for the documentation  links
  uc_kb_name_regexes:
    - 'uc-\w+-\d+-[\w\-_ ]*'
  #Time format used for queries and such
  time_format: "%Y-%m-%d %H:%M:%S"
  #Optional configuration to configure timezone for the received timestamps. Default is local (of the server running synapse)
  #timezone: <timezone>
  observables_in_offense_type:
    Hostname (custom): 
      - regex: '(([\w\d-]+)\.?)((([\w\d]+)\.?)*\.([\w\d]+))'
        match_groups:
          0: fqdn
          3: domain
    MD5 Hash (custom): hash
  

Splunk:
  #Enable/disable the integration part of the module
  enabled: false
  #Enable/disable the automation part of the module
  automation_enabled: false
  #Url to the Splunk server where the API is accesible
  url: https://splunk.stargazer.org:8089
  #Username of the service account for Synapse
  username: <username>
  #Password of the service account for Synapse
  password: <password>
  #Optional Proxy configuration
  http_proxy: <url>
  https_proxy: <url>
  #Define a maximum number of values to retrieve
  max_result_count: 200
  #Define the timeout for every search
  query_timeout: 00:05:00
  #Time format used for queries and such
  time_format: "%m/%d/%Y:%H:%M:%S"

ELK:
  enabled: false
  automation_enabled: false
  synapse_endpoint: /elk2th
  #ip or domain to ELK
  server: elk.stargazer.org
  port: 9200

MISP:
  enabled: false
  automation_enabled: false
  #A list of data types that are checked for when the feature is enable to automatically search for observables in QRadar
  supported_datatypes: 
    - "ip"
    - "domain"
    - "fqdn"
    - "mail"
    - "url"
    - "hash"

AzureSentinel:
  #Enable/disable the integration part of the module
  enabled: false
  #Endpoint used in the integration url
  synapse_endpoint: sentinel
  #Your Office 365 tenant id where the service account/sentinel lives
  tenant_id: <tenant_id>
  #The id of the service account
  client_id: <client_id>
  #The secret of the service account
  client_secret: <client_secret>
  #The subscription id of your sentinel environment
  subscription_id: <subscription_id>
  #The resource group of your sentinel environment
  resource_group: <resource_group>
  #The workspace of your sentinel environment
  workspace: <workspace>
  #A case template to assign on alerts created for an incident
  case_template: Sentinel Incident

Lexsi:
  #Enable/disable the integration part of the module
  enabled: false
  #Url to the Splunk server where the API is accesible
  url: <url
  #Username of the service account for Synapse
  user: <user>
  #Password of the service account for Synapse
  password: <password>
  #Optional Proxy configuration
  http_proxy: <url>
  https_proxy: <url>
  #Endpoint used in the integration url
  synapse_endpoint: lexsi
  #A case template to assign on alerts created for an incident
  case_template: SWM:\ Phishing
  #Filter for the api request results. Sample below filters out all open(stateid:1) Phishing(e7c62536cb8a43268dc9c06a64916d8e) alerts
  filter: [{"property":"filterList","value":"e7c62536cb8a43268dc9c06a64916d8e"},{"property":"stateid","value":1}]